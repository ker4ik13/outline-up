@import "@/shared/styles/_vars";

$burger-active-width: $max-900;
$header-height: rem(80);

.nav {
  width: 100%;
  position: relative;
  z-index: 100;
  transition: background-color 0.3s;

  &.light {
    background-color: $bg-dark-white;
    color: $black;
    position: fixed;
    top: 0;
    border-bottom: rem(1) solid $white;
    background: $bg-dark-white;
    box-shadow: 0px 0px rem(30) 0px rgba(21, 1, 79, 0.1);

    .centerPages {
      @media (max-width: $burger-active-width) {
        &.active {
          transform: translate(0%, $header-height);
          background-color: $bg-dark-white;
          border-bottom: rem(1) solid $white;
          background: $bg-dark-white;
          box-shadow: 0 rem(14) rem(20) 0 rgba(21, 1, 79, 0.05);
        }
      }
    }
    .burger {
      & span:first-child {
        background-color: $black;
      }
      & span:nth-child(2n) {
        background-color: $black;
      }

      & span:last-child {
        background-color: $black;
      }
    }
  }
  &.dark {
    background-color: #16000b;
    color: $bg-white;
    position: fixed;
    top: 0;

    .centerPages {
      @media (max-width: $burger-active-width) {
        &.active {
          transform: translate(0%, $header-height);
          background-color: #16000b;
        }
      }
    }

    &.isSolid {
      background-color: $bg-black;
    }
  }

  @media screen and (max-width: $burger-active-width) {
    background-color: rgba(0, 0, 0, 0.7);
  }
}
.container {
  @include container();
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: rem(30);
  position: relative;
  height: 100%;
  padding: rem(30) rem(20);
}
.logo {
  @include inter();
  font-size: rem(20);
  line-height: 1;
  cursor: pointer;
  color: inherit;
  text-decoration: none;
  transition: 0.1s;
  text-transform: uppercase;
  text-wrap: nowrap;

  &:hover {
    opacity: 0.8;
  }
}

.centerPages {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 70%;
  border: 0;
  outline: none;
  transition: 0.3s ease-in-out;
  background-color: rgba(0, 0, 0, 0);

  @media (max-width: $max-1000) {
    width: 76%;
  }
  @media (max-width: $burger-active-width) {
    position: absolute;
    top: 0;
    left: 0%;
    width: 100%;
    z-index: -1;
    flex-direction: column;
    align-items: flex-end;
    gap: rem(20);
    padding: rem(20);
    padding-bottom: rem(35);
    transform: translate(0, -300%);
  }
}

.pages {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: rem(40);
  list-style-type: none;

  @media screen and (max-width: $max-1050) {
    gap: rem(30);
  }
  @media screen and (max-width: $burger-active-width) {
    flex-direction: column;
    align-items: flex-end;
    gap: rem(10);
  }
}
.page {
  color: inherit;
  text-decoration: none;
  text-transform: uppercase;
  @include desktop-small();
  cursor: pointer;
  font-weight: 300;

  & a {
    color: inherit;
    text-decoration: none;
    font-weight: 300;
  }

  &:hover {
    opacity: 0.7;
  }

  @media screen and (max-width: $burger-active-width) {
    @include mob-p-light();
    cursor: pointer;
  }
}
.burger {
  position: relative;
  min-width: rem(26);
  height: rem(18);
  cursor: pointer;
  transition: 0.2s ease-in-out;

  @media (min-width: $burger-active-width) {
    display: none;
  }

  & span {
    border-radius: 50px;
  }

  & span:first-child {
    position: absolute;
    top: 0;
    left: 0;
    width: rem(26);
    height: rem(2);
    background-color: $white;
    border-radius: rem(50);
    transition: 0.2s ease-in-out;
  }
  & span:nth-child(2n) {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    width: rem(26);
    height: rem(2);
    background-color: $white;
    border-radius: rem(50);
    transition: 0.2s ease-in-out;
  }

  & span:last-child {
    position: absolute;
    bottom: 0;
    left: 0;
    width: rem(26);
    height: rem(2);
    background-color: $white;
    border-radius: rem(50);
    transition: 0.2s ease-in-out;
  }

  &.active {
    & span:first-child {
      top: 50%;
      transform: rotate(-45deg) translate(0, -50%);
    }
    & span:nth-child(2n) {
      opacity: 0;
    }
    & span:last-child {
      bottom: 50%;
      transform: rotate(45deg) translate(0%, 50%);
    }
  }
}
